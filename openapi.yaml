openapi: 3.0.0
info:
  title: Dictionary API
  description: API for dictionary management with user authentication and word lookup
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
    Word:
      type: object
      properties:
        word:
          type: string
        added:
          type: string
          format: date-time
    PaginatedResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: string
        totalDocs:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        hasNext:
          type: boolean
        hasPrev:
          type: boolean
paths:
  /:
    get:
      summary: Get welcome message
      responses:
        '200':
          description: Welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /auth/signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        $ref: '#/components/schemas/Token'
                  message:
                    type: string
  /auth/signin:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        $ref: '#/components/schemas/Token'
                  message:
                    type: string
  /entries/en:
    get:
      summary: Get list of words
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of words
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
  /entries/en/{word}:
    get:
      summary: Get word definition
      security:
        - bearerAuth: []
      parameters:
        - name: word
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Word definition
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  meta:
                    type: object
                    properties:
                      cache:
                        type: string
                      responseTime:
                        type: string
    post:
      summary: Add word to favorites
      security:
        - bearerAuth: []
      parameters:
        - name: word
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Word added to favorites
    delete:
      summary: Remove word from favorites
      security:
        - bearerAuth: []
      parameters:
        - name: word
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Word removed from favorites
  /user/me:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/me/history:
    get:
      summary: Get user search history
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: User search history
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Word'
                  totalDocs:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  hasNext:
                    type: boolean
                  hasPrev:
                    type: boolean
  /user/me/favorites:
    get:
      summary: Get user favorites
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: User favorites
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Word'
                  totalDocs:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer
                  hasNext:
                    type: boolean
                  hasPrev:
                    type: boolean
